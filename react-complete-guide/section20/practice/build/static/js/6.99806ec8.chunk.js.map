{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sorting","onClick","push","list","sort","quoteA","quoteB","map","quote","QUOTES","AllQuotes"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,wFCmB5CC,EAhBG,SAACC,GACf,OACI,qBAAIC,UAAWC,IAAQC,KAAvB,UACI,mCACI,qCACI,4BAAIH,EAAMI,SAEd,qCAAaJ,EAAMK,YAEvB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCoCGC,EAjCG,SAACR,GACf,IAXgBS,EAAQC,EAWlBC,EAAUC,cACVC,EAAWC,cAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAM3C,OACI,eAAC,WAAD,WACI,qBAAKjB,UAAWC,IAAQiB,QAAxB,SACI,yBAAQC,QAPS,WACzBT,EAAQU,KAAK,iBAAmBN,EAAqB,OAAS,SAMtD,kBACUA,EAAqB,aAAe,iBAGlD,oBAAId,UAAWC,IAAQoB,KAAvB,UA7BQb,EA8BQT,EAAMS,OA9BNC,EA8BcK,EA7B/BN,EAAOc,MAAK,SAACC,EAAQC,GACxB,OAAIf,EACOc,EAAOjB,GAAKkB,EAAOlB,GAAK,GAAK,EAE7BiB,EAAOjB,GAAKkB,EAAOlB,GAAK,GAAK,MAyBcmB,KAAI,SAACC,GAAD,OAC9C,cAAC,EAAD,CAEIpB,GAAIoB,EAAMpB,GACVF,OAAQsB,EAAMtB,OACdD,KAAMuB,EAAMvB,MAHPuB,EAAMpB,aCpC7BqB,EAAS,CACX,CACIrB,GAAI,KACJF,OAAQ,UACRD,KAAM,aAEV,CACIG,GAAI,KACJF,OAAQ,QACRD,KAAM,sBAQCyB,UAJG,WACd,OAAO,cAAC,EAAD,CAAWpB,OAAQmB","file":"static/js/6.99806ec8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","import { Link } from \"react-router-dom\";\n\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n    return (\n        <li className={classes.item}>\n            <figure>\n                <blockquote>\n                    <p>{props.text}</p>\n                </blockquote>\n                <figcaption>{props.author}</figcaption>\n            </figure>\n            <Link className=\"btn\" to={`/quotes/${props.id}`}>\n                View Fullscreen\n            </Link>\n        </li>\n    );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n        if (ascending) {\n            return quoteA.id > quoteB.id ? 1 : -1;\n        } else {\n            return quoteA.id < quoteB.id ? 1 : -1;\n        }\n    });\n};\n\nconst QuoteList = (props) => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const queryParams = new URLSearchParams(location.search);\n\n    const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n    const changeSortingHandler = () => {\n        history.push(\"/quotes?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n    };\n\n    return (\n        <Fragment>\n            <div className={classes.sorting}>\n                <button onClick={changeSortingHandler}>\n                    Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n                </button>\n            </div>\n            <ul className={classes.list}>\n                {sortQuotes(props.quotes, isSortingAscending).map((quote) => (\n                    <QuoteItem\n                        key={quote.id}\n                        id={quote.id}\n                        author={quote.author}\n                        text={quote.text}\n                    />\n                ))}\n            </ul>\n        </Fragment>\n    );\n};\n\nexport default QuoteList;\n","import QuoteList from \"../components/quotes/QuoteList\";\n\nconst QUOTES = [\n    {\n        id: \"q1\",\n        author: \"Ronaldo\",\n        text: \"Sou lindo\",\n    },\n    {\n        id: \"q2\",\n        author: \"Messi\",\n        text: \"Eu sou mais lindo\",\n    },\n];\n\nconst AllQuotes = () => {\n    return <QuoteList quotes={QUOTES} />;\n};\n\nexport default AllQuotes;\n"],"sourceRoot":""}